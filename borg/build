#!/bin/bash
[[ "$1" == "final" ]] || exit 0
set -xeuo pipefail

LSB_RELEASE="trusty"
APPNAME="$(cat /app/APPNAME)"
test "${APPNAME}"

cleanup() {
  sudo rm -rf /workspace
  sudo rm -rf ~/.ssh
}
trap cleanup EXIT

setup_ssh_keys() {
  mkdir -p ~/.ssh
  ruby -rjson -e 'puts JSON.load(File.read("/app/config/secrets.json"))["privkey"]' > ~/.ssh/id_rsa
  ruby -rjson -e 'puts JSON.load(File.read("/app/config/secrets.json"))["pubkey"]' > ~/.ssh/id_rsa.pub
  echo "apt.ec2.shopify.com ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABAQDF7qYvPBGkhIJeeLWz9Po+WrjwrpGKwuiadkR/MCeh1Xx5tEIuDghaFC3QvMQesOHMts+n44gdjsqz9Kwqe4suLNTA8bVdrwD1bWO/nJNsRdfnyKrXWU7GVl2d/8kspKXZuVhOb+O9/gPallhLFmFZL/YAaL4jVOF8tI/12B0hVzYkrk4Y2ePujT9edaPQD/XNWE3102VFyEgfqZm96puhzDk51ZfcKtsHfIqwwILLe9KlORF66URMV6QFmt0ls4hSbtRhHH0wjJAkHBdkK6jow0QN8tkPjU0Qxuxdea8YBioKDfnWBltggQM6RhjLu+amyR3oIGdyXz4pyYRJp85X" \
    > ~/.ssh/known_hosts
  chmod 0600 ~/.ssh/id_rsa
}

gen_version() {
  local version="$(cat /app/VERSION)"
  local revision="$(cat /app/REVISION)"
  test "${version}"
  test "${revision}"
  echo "${version}-${revision:0:8}" # eg: 1.0-deadbeef
}

setup_workspace() {
  sudo mkdir /workspace
  sudo chown -R borg:borg /workspace
  cp -a /app "/workspace/${APPNAME}"
}

install_build_deps() {
  cd "/workspace/${APPNAME}/debian"
  mk-build-deps control
  sudo dpkg -i *.deb || true
  sudo apt-get -f -y install
}

compile_manpages() {
  cd "/workspace/${APPNAME}"
  for ronnfile in man/*.ronn; do
    # We should probably put rubygems on the container's PATH.
    /usr/lib/shopify-ruby/2.1.3-shopify1/bin/ronn -r "${ronnfile}"
  done
  for manfile in $(ls man | grep -P '\.\d$'); do
    echo "man/${manfile}" >> "debian/${APPNAME}.manpages"
  done
}

build_deb() {
  local version=$1;shift
  cd "/workspace/${APPNAME}/debian"

  dch \
    --newversion "${version}" \
    --force-bad-version \
    -D "${LSB_RELEASE}" \
    "Release for ${LSB_RELEASE}"

  debuild -i -us -uc -b
}

inspect() {
  ls -lsa /workspace
  sudo dpkg -i /workspace/*.deb
  cat /workspace/*.changes
  dpkg-query -L "${APPNAME}"
  man "${APPNAME}"
}

upload_deb() {
  ruby /app/borg/upload_deb.rb /workspace
}

main() {
  local version="$(gen_version)"
  setup_ssh_keys
  setup_workspace
  install_build_deps
  compile_manpages
  build_deb "${version}"
  inspect
  upload_deb
}
main "$@"

